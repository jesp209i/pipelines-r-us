name: pipeline

on:
  push:
    branches:
     - main
     - powershell # current branch

env:
  projectId: ${{ vars.PROJECT_ID }} # Set as variable
  umbracoCloudApiKey: ${{ secrets.UMBRACO_CLOUD_API_KEY }} # set as secret
  baseUrl : https://api.cloud.umbraco.com

jobs:

  publish:
    name: Zip and Publish to Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Request to prepare a deployment
      # - sets the commit message to be used in cloud 
      # - supplies you with a deploymentId to be used in the rest of the process
      - name: Create Deployment Meta
        id: deployment-meta
        shell: pwsh
        run: ${{GITHUB.WORKSPACE}}/powershell/New-Deployment.ps1 -baseUrl ${{env.baseUrl}} -projectId ${{ env.projectId }} -apiKey ${{ env.umbracoCloudApiKey }} -commitMessage "Run number ${{github.run_number}}" -pipelineVendor GITHUB

      # switch the gitignore files so cloud does not ignore my build frontend assets
      # this is in order to bundle the the cloud.gitignore correctly
      - name: Prepare Cloud Git Ignore
        run: cp cloud.gitignore .gitignore
        shell: bash

      # zip everything, but what is defined in the '.zipignore'
      - name: Zip Source Code
        run: zip -r sources.zip . -x@.zipignore
        shell: bash

      # Upload your zipped artifact
      - name: Post Zipped Artifact
        shell: pwsh
        run: ${{GITHUB.WORKSPACE}}/powershell/Add-Deployment-Package.ps1 -baseUrl ${{env.baseUrl}} -projectId ${{ env.projectId }} -deploymentId ${{ steps.deployment-meta.outputs.DEPLOYMENT_ID }} -apiKey ${{ env.umbracoCloudApiKey }} -filePath ${{ GITHUB.WORKSPACE }}/sources.zip

      # Actually request to start the deployment process in cloud
      - name: Request Start Deployment
        shell: pwsh
        run: ${{ GITHUB.WORKSPACE }}/powershell/Start-Deployment.ps1 -baseUrl ${{env.baseUrl}} -projectId ${{ env.projectId }} -deploymentId ${{ steps.deployment-meta.outputs.DEPLOYMENT_ID }} -apiKey ${{ env.umbracoCloudApiKey }}

      # Poll until deployment finishes 
      - name: Wait for deployment completed PWSH
        shell: pwsh
        run: ${{ GITHUB.WORKSPACE }}/powershell/Get-Deployment-Status.ps1 -baseUrl ${{ env.baseUrl }} -projectId ${{ env.projectId }} -deploymentId ${{ steps.deployment-meta.outputs.DEPLOYMENT_ID }} -apiKey ${{ env.umbracoCloudApiKey }}
